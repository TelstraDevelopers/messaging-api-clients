/**
 * Telstra SMS Messaging API
 * The Telstra SMS Messaging API allows your applications to send and receive SMS text messages from Australia's leading network operator. It also allows your application to track the delivery status of both sent and received SMS messages. 
 *
 * OpenAPI spec version: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Messaging) {
      root.Messaging = {};
    }
    root.Messaging.MessageSentResponse = factory(root.Messaging.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The MessageSentResponse model module.
   * @module model/MessageSentResponse
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>MessageSentResponse</code>.
   * @alias module:model/MessageSentResponse
   * @class
   * @param to {String} The mobile phone number (in E.164 format) that the message was sent to.
   * @param deliveryStatus {String} The current status of the message for this address. Possible values are; 'DeliveryImpossible' – The message has been rejected and cannot be delivered. see the description field. 'MessageWaiting' – The message will be delivered as soon as possible.
   */
  var exports = function(to, deliveryStatus) {
    var _this = this;

    _this['to'] = to;
    _this['deliveryStatus'] = deliveryStatus;




  };

  /**
   * Constructs a <code>MessageSentResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MessageSentResponse} obj Optional instance to populate.
   * @return {module:model/MessageSentResponse} The populated <code>MessageSentResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('to')) {
        obj['to'] = ApiClient.convertToType(data['to'], 'String');
      }
      if (data.hasOwnProperty('deliveryStatus')) {
        obj['deliveryStatus'] = ApiClient.convertToType(data['deliveryStatus'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('messageId')) {
        obj['messageId'] = ApiClient.convertToType(data['messageId'], 'String');
      }
      if (data.hasOwnProperty('messageType')) {
        obj['messageType'] = ApiClient.convertToType(data['messageType'], 'String');
      }
      if (data.hasOwnProperty('numberSegements')) {
        obj['numberSegements'] = ApiClient.convertToType(data['numberSegements'], 'Number');
      }
    }
    return obj;
  }

  /**
   * The mobile phone number (in E.164 format) that the message was sent to.
   * @member {String} to
   */
  exports.prototype['to'] = undefined;
  /**
   * The current status of the message for this address. Possible values are; 'DeliveryImpossible' – The message has been rejected and cannot be delivered. see the description field. 'MessageWaiting' – The message will be delivered as soon as possible.
   * @member {String} deliveryStatus
   */
  exports.prototype['deliveryStatus'] = undefined;
  /**
   * This is a string that describes why a message could not be delivered.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * The message ID of the SMS that was sent. Use this ID to view the message status or to receive get responses.
   * @member {String} messageId
   */
  exports.prototype['messageId'] = undefined;
  /**
   * A string that identifys the transport mechanism that was selected for delivering the the message.
   * @member {module:model/MessageSentResponse.MessageTypeEnum} messageType
   */
  exports.prototype['messageType'] = undefined;
  /**
   * An integer between 0 and 65536 that indicates the number of chargable segments in the message. For SMS this will be the number of segments the message had to be divided into (after convertion) to a character set understood by the SMS network.
   * @member {Number} numberSegements
   */
  exports.prototype['numberSegements'] = undefined;


  /**
   * Allowed values for the <code>messageType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.MessageTypeEnum = {
    /**
     * value: "SMS"
     * @const
     */
    "SMS": "SMS",
    /**
     * value: "MMS"
     * @const
     */
    "MMS": "MMS",
    /**
     * value: "RCS"
     * @const
     */
    "RCS": "RCS"  };


  return exports;
}));


