/**
 * Telstra SMS Messaging API
 * The Telstra SMS Messaging API allows your applications to send and receive SMS text messages from Australia's leading network operator. It also allows your application to track the delivery status of both sent and received SMS messages. 
 *
 * OpenAPI spec version: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ErrorError', 'model/InboundPollResponse', 'model/Message', 'model/MessageSentResponse', 'model/OutboundPollResponse', 'model/SendSMSRequest', 'model/Status', 'api/SMSApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ErrorError'), require('./model/InboundPollResponse'), require('./model/Message'), require('./model/MessageSentResponse'), require('./model/OutboundPollResponse'), require('./model/SendSMSRequest'), require('./model/Status'), require('./api/SMSApi'));
  }
}(function(ApiClient, ErrorError, InboundPollResponse, Message, MessageSentResponse, OutboundPollResponse, SendSMSRequest, Status, SMSApi) {
  'use strict';

  /**
   * The_Telstra_SMS_Messaging_API_allows_your_applications_to_send_and_receive_SMS_text_messages_from_Australias_leading_network_operator_It_also_allows_your_application_to_track_the_delivery_status_of_both_sent_and_received_SMS_messages_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var TelstraSmsMessagingApi = require('index'); // See note below*.
   * var xxxSvc = new TelstraSmsMessagingApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new TelstraSmsMessagingApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new TelstraSmsMessagingApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new TelstraSmsMessagingApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ErrorError model constructor.
     * @property {module:model/ErrorError}
     */
    ErrorError: ErrorError,
    /**
     * The InboundPollResponse model constructor.
     * @property {module:model/InboundPollResponse}
     */
    InboundPollResponse: InboundPollResponse,
    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message: Message,
    /**
     * The MessageSentResponse model constructor.
     * @property {module:model/MessageSentResponse}
     */
    MessageSentResponse: MessageSentResponse,
    /**
     * The OutboundPollResponse model constructor.
     * @property {module:model/OutboundPollResponse}
     */
    OutboundPollResponse: OutboundPollResponse,
    /**
     * The SendSMSRequest model constructor.
     * @property {module:model/SendSMSRequest}
     */
    SendSMSRequest: SendSMSRequest,
    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status: Status,
    /**
     * The SMSApi service constructor.
     * @property {module:api/SMSApi}
     */
    SMSApi: SMSApi
  };

  return exports;
}));
